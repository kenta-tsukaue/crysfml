stages:
  - docker_pre_clean
  - make
  - make_release
  - docker_post_clean

docker_pre_clean:
  stage: docker_pre_clean
  script:
    - ${CI_PROJECT_DIR}/BuildServer/Docker/clean.sh
  allow_failure: true
  tags:
    - docker
    - sci
    - ubuntu

docker_post_clean:
  stage: docker_post_clean
  script:
    - ${CI_PROJECT_DIR}/BuildServer/Docker/clean.sh
  allow_failure: true
  when: always
  dependencies: []
  tags:
    - docker
    - sci
    - ubuntu
    
#===============
#== MAKE SECTION
#===============

make:linux_gfortran:
  stage: make
  script:
    - docker build --force-rm -t ci_crysfml_xenial_gfortran -f ${CI_PROJECT_DIR}/BuildServer/Docker/Dockerfile_xenial_gfortran_setup .
    - docker build --force-rm --no-cache -t ci_crysfml_xenial_gfortran_build -f ${CI_PROJECT_DIR}/BuildServer/Docker/Dockerfile_xenial_gfortran_build --build-arg CI_COMMIT_SHORT_SHA=${CI_COMMIT_SHORT_SHA} --build-arg CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} .
    - docker run -i -v${PWD}:/artifacts/ -v/users/ci/projects/fullprof/hdf5-1_12_0-gfortran:/hdf5 ci_crysfml_xenial_gfortran_build
  tags:
    - docker
    - sci
    - ubuntu
    
make:linux_ifort:
  stage: make
  script:
    - docker build --force-rm -t ci_crysfml_xenial_ifort -f ${CI_PROJECT_DIR}/BuildServer/Docker/Dockerfile_xenial_ifort_setup .
    - docker build --force-rm --no-cache -t ci_crysfml_xenial_ifort_build -f ${CI_PROJECT_DIR}/BuildServer/Docker/Dockerfile_xenial_ifort_build --build-arg CI_COMMIT_SHORT_SHA=${CI_COMMIT_SHORT_SHA} --build-arg CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} .
    - docker run -i -v${PWD}:/artifacts/ -v/users/ci/projects/fullprof/intel:/opt/intel -v/users/ci/projects/fullprof/hdf5-1_12_0-ifort:/hdf5 ci_crysfml_xenial_ifort_build
  tags:
    - docker
    - sci
    - ubuntu


#===============

make:macos_gfortran:
  stage: make
  script:
    - export HDF5_INCLUDE_PATH="/Users/ci/Projects/fullprof/hdf5-gfortran/include"
    - export HDF5_LIBRARY_PATH="/Users/ci/Projects/fullprof/hdf5-gfortran/lib"
    - BuildServer/Unix/build.sh gfortran
  tags:
    - sci
    - osx-10.13
    
make:macos_ifort:
  stage: make
  script:
    - export HDF5_INCLUDE_PATH="/Users/ci/Projects/fullprof/hdf5-ifort/include"
    - export HDF5_LIBRARY_PATH="/Users/ci/Projects/fullprof/hdf5-ifort/lib"
    - BuildServer/Unix/build.sh ifort
  tags:
    - sci
    - osx-10.13


#===============

make:windows_gfortran:
  stage: make
  script:
    - set PATH=c:\Projects\fullprof\python37;C:\\Projects\\fullprof\\hdf5-gfortran\\bin;%PATH%
    - set PATH=c:\Projects\fullprof\MinGW64\bin;%PATH%
    - set PATH=%PATH:C:\Program Files\Git\bin;=%
    - set HDF5_INCLUDE_PATH=C:\\Projects\\fullprof\\hdf5-gfortran\\include\\shared
    - set HDF5_LIBRARY_PATH=C:\\Projects\\fullprof\\hdf5-gfortran\\lib
    - call "BuildServer\\Windows\\build.bat" gfortran
  tags:
    - sci
    - windows-10

make:windows_ifort:
  stage: make
  script:
    - call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat"
    - call "C:\\Program Files (x86)\\IntelSWTools\\compilers_and_libraries_2020.2.254\\windows\\bin\\ifortvars.bat" intel64
    - set PATH=c:\Projects\fullprof\python37\;C:\\Projects\\fullprof\\hdf5-ifort\\bin;%PATH%
    - set LIB="C:\\Program Files (x86)\\IntelSWTools\\compilers_and_libraries_2020.2.254\\windows\\compiler\\lib\\intel64_win";%LIB%
    - set HDF5_INCLUDE_PATH=C:\\Projects\\fullprof\\hdf5-ifort\\include\\shared
    - set HDF5_LIBRARY_PATH=C:\\Projects\\fullprof\\hdf5-ifort\\lib
    - call "BuildServer\\Windows\\build.bat" ifort
  tags:
    - sci
    - windows-10

    
#=======================
#== MAKE RELEASE SECTION
#=======================

make_release:linux_ifort:
  stage: make_release
  script:
    - docker build --force-rm -t ci_crysfml_xenial_ifort -f ${CI_PROJECT_DIR}/BuildServer/Docker/Dockerfile_xenial_ifort_setup .
    - docker build --force-rm --no-cache -t ci_crysfml_xenial_release_ifort_build -f ${CI_PROJECT_DIR}/BuildServer/Docker/Dockerfile_xenial_release_ifort_build --build-arg CI_COMMIT_SHORT_SHA=${CI_COMMIT_SHORT_SHA} --build-arg CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} .
    - docker run -i -v${PWD}:/artifacts/ -v/users/ci/projects/fullprof:/fullprof -v/users/ci/projects/fullprof/intel:/opt/intel -v/users/ci/projects/fullprof/hdf5-1_12_0-ifort:/hdf5 ci_crysfml_xenial_release_ifort_build
  artifacts:
    name: "CrysFML Linux ifort"
    paths:
    - ${CI_PROJECT_DIR}/ifort/LibC
    - ${CI_PROJECT_DIR}/ifort/Python_API
  tags:
    - docker
    - sci
    - ubuntu

make_release:linux_gfortran:
  stage: make_release
  script:
    - docker build --force-rm -t ci_crysfml_xenial_gfortran -f ${CI_PROJECT_DIR}/BuildServer/Docker/Dockerfile_xenial_gfortran_setup .
    - docker build --force-rm --no-cache -t ci_crysfml_xenial_release_gfortran_build -f ${CI_PROJECT_DIR}/BuildServer/Docker/Dockerfile_xenial_release_gfortran_build --build-arg CI_COMMIT_SHORT_SHA=${CI_COMMIT_SHORT_SHA} --build-arg CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} .
    - docker run -i -v${PWD}:/artifacts/ -v/users/ci/projects/fullprof:/fullprof -v/users/ci/projects/fullprof/hdf5-1_12_0-gfortran:/hdf5 ci_crysfml_xenial_release_gfortran_build
  artifacts:
    name: "CrysFML Linux gfortran"
    paths:
    - ${CI_PROJECT_DIR}/gfortran/LibC
    - ${CI_PROJECT_DIR}/gfortran/Python_API
  tags:
    - docker
    - sci
    - ubuntu
    


#===============
make_release:macos:
  stage: make_release
  script:
    - export HDF5_INCLUDE_PATH="/Users/ci/Projects/fullprof/hdf5-ifort/include"
    - export HDF5_LIBRARY_PATH="/Users/ci/Projects/fullprof/hdf5-ifort/lib"
    - export PYTHON_LIBRARY_PATH="/Users/ci/Projects/fullprof/libpython3.7.dylib"
    - export TEST_TRICK_COMMAND="install_name_tool -change /Library/Frameworks/Python.framework/Versions/3.7/Python /usr/local/Cellar/python\@3.8/3.8.3/Frameworks/Python.framework/Versions/3.8/Python Python_API/Tests/CFML_api/crysfml_api.so"
    - BuildServer/Unix/build_release.sh
  artifacts:
    name: "CrysFML macOS"
    paths:
    - ${CI_PROJECT_DIR}/ifort/LibC
    - ${CI_PROJECT_DIR}/ifort/Python_API
  tags:
    - sci
    - osx-10.13


#===============

make_release:windows:
  stage: make_release
  script:
    - call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat"
    - call "C:\\Program Files (x86)\\IntelSWTools\\compilers_and_libraries_2020.2.254\\windows\\bin\\ifortvars.bat" intel64
    - set PATH=c:\Projects\fullprof\python37\;C:\\Projects\\fullprof\\hdf5-ifort\\bin;%PATH%
    - set LIB="C:\\Program Files (x86)\\IntelSWTools\\compilers_and_libraries_2020.2.254\\windows\\compiler\\lib\\intel64_win";%LIB%
    - set HDF5_INCLUDE_PATH=C:\\Projects\\fullprof\\hdf5-ifort\\include\\shared
    - set HDF5_LIBRARY_PATH=C:\\Projects\\fullprof\\hdf5-ifort\\lib
    - set PYTHON_LIBRARY_PATH=C:\\Projects\\fullprof\\python37\\libs\\python37.lib
    - set PYTHON_INTERPRETER_PATH=C:\\Projects\fullprof\\python37\\python3.exe
    - call "BuildServer\\Windows\\build_release.bat"
  artifacts:
    name: "CrysFML Windows"
    paths:
    - "%CI_PROJECT_DIR%\\ifort\\LibC"
    - "%CI_PROJECT_DIR%\\ifort\\Python_API"
  tags:
    - sci
    - windows-10

